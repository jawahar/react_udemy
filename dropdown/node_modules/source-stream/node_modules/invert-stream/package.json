{
  "name": "invert-stream",
  "version": "0.0.1",
  "homepage": "https://github.com/dominictarr/invert-stream",
  "repository": {
    "type": "git",
    "url": "git://github.com/dominictarr/invert-stream.git"
  },
  "dependencies": {},
  "devDependencies": {
    "macgyver": "~1.8.0",
    "tap": "0.3.0"
  },
  "scripts": {
    "test": "tap test"
  },
  "author": {
    "name": "'Dominic Tarr'",
    "email": "dominic.tarr@gmail.com",
    "url": "http://dominictarr.com"
  },
  "license": "MIT",
  "readme": "# invert-stream\n\nCreate a pair of streams (A, B) such that `A.write(X) -> B.emit('data', X)`\nand `B.write(X) -> A.emit('data', X)`\n\n``` js\n\nvar invert = require('invert-stream')\n\nvar inverted = invert()\n\nin_steam.pipe(inverted.other).pipe(out_stream)\n\ninverted.write(data_for_outstream)\ninverted.on('data', data_from_in_stream)\n\n## why ?\n\nthis is useful for a couple of things.\n\n  * testing streams based stuff\n  * making flexible duplex stream apis\n\nan `invert-stream` pair is like a tcp connection, \nbut in-process and synchronous. It's way easier to test\nedge cases related to event order if you stuff works sync.\n\nAlso, it's useful making duplex streams, or multiple streams into one.\n\n### Example\n\n```js\n\n  var spawn = require('child_process').spawn\n  var invert = require('invert-stream')\n\n  var ch = spawn(cmd, args)\n  var inverted = invert()\n\n  ch.stdout.pipe(inverted.other).pipe(ch.sdin)\n\n  //now, we have just ONE stream: inverted\n\n  //write to che ch's stdin\n  inverted.write(data)\n\n  //read from ch's stdout\n  inverted.on('data', ...) \n\n```\n\n## License\n\nMIT\n",
  "_id": "invert-stream@0.0.1",
  "description": "Create a pair of streams (A, B) such that `A.write(X) -> B.emit('data', X)` and `B.write(X) -> A.emit('data', X)`",
  "dist": {
    "shasum": "dc401f0fafedddb3042b88c0814739b9d66e46d7",
    "tarball": "http://registry.npmjs.org/invert-stream/-/invert-stream-0.0.1.tgz"
  },
  "maintainers": [
    {
      "name": "dominictarr",
      "email": "dominic.tarr@gmail.com"
    }
  ],
  "directories": {},
  "_shasum": "dc401f0fafedddb3042b88c0814739b9d66e46d7",
  "_resolved": "https://registry.npmjs.org/invert-stream/-/invert-stream-0.0.1.tgz",
  "_from": "invert-stream@0.0.1"
}
